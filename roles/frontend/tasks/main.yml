


#PRINT "remove old content"
#cd /usr/share/nginx/html
#rm -rf * &>>${LOG}
#CHECK_STAT $?

#PRINT "Extract ${COMPONENT} content"
#unzip /tmp/${COMPONENT}.zip &>>${LOG}
#CHECK_STAT $?

#PRINT "Organise ${COMPONENT} content"
#mv ${COMPONENT}-main/static/* . &>>${LOG}
#CHECK_STAT $?

#PRINT "Setup system configuration"
#mv ${COMPONENT}-main/localhost.conf /etc/nginx/default.d/roboshop.conf &>>${LOG}
#CHECK_STAT $?

#for backend in catalogue user cart shipping payment ; do
#PRINT "Update $backend configuration"
#  #sed -i -e '/catalogue/ s/localhost/catalogue.roboshop.internal/' -e '/user/ s/localhost/user.roboshop.internal/' -e '/cart/ s/localhost/cart.roboshop.internal/' -e '/shipping/ s/localhost/shipping.roboshop.internal/' -e '/payment/ s/localhost/payment.roboshop.internal/' /etc/nginx/default.d/roboshop.conf
#sed -i -e "/$backend/ s/localhost/$backend.roboshop.internal/" /etc/nginx/default.d/roboshop.conf
#CHECK_STAT $?
#done

#PRINT "Restart nginx service"
#systemctl enable nginx &>>${LOG} && systemctl restart nginx &>>${LOG}
#CHECK_STAT $?

- name: Install nginx
  ansible.builtin.yum:
    name: nginx
    state: installed

- name: Import Common role Code download
  ansible.builtin.include_role:
    name: common
    tasks_from: download
    
#
#- name: delete old content
#  ansible.builtin.file:
#    path: /usr/share/nginx/html
#    state: absent
#
#- name: Extract frontend content
#  ansible.builtin.unarchive:
#    src: /tmp/frontend.zip
#
#- name: organise frontend content
#  ansible.builtin.copy:
#    src: frontend-main/static/*
#    dest: /usr/share/nginx/html
#    owner:
#    group:
#
#- name: Setup system configuration
#  ansible.builtin.copy:
#    src: frontend-main/localhost.conf
#    dest: /etc/nginx/default.d/roboshop.conf
#
#
#
#
#
#
#- name: Restart nginx service
#  ansible.builtin.service:
#    name: nginx
#    state: restarted